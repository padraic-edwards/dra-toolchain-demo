version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    $ref: "#/messages/template.description"
  header: '![](dra-toolchain.svg?localize)'
  icon: icon.svg
  required:
    - demodra-build
    - demodra-repo
    - dra
  info:    
    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc. 
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
        '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
        $env.branch ?
          '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
          '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: 'devops-insights-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  demodra-repo:
    service_id: githubpublic
    parameters:
      repo_name: '{{form.githubpublic.parameters.demodra-repo_name}}'
      repo_url: '{{form.githubpublic.parameters.demodra-repo_url}}'
      type: clone
      has_issues: true
      enable_traceability: true
  demodra-build:
    service_id: pipeline
    parameters:
      services:
        - demodra-repo
      name: '{{toolchain.name}}'
      configuration:
        content:
          $text: demodra.pipeline.yml
        env:
          DEMODRA_API_REPO: demodra-repo
          LOGICAL_APP_NAME: Weather Application
          CF_APP_NAME: '{{form.pipeline.parameters.demodra-app-name}}'
          STAGING_SPACE_NAME: '{{form.pipeline.parameters.staging-space}}'
          STAGING_ORG_NAME: '{{form.pipeline.parameters.staging-organization}}'
          STAGING_REGION_ID: '{{form.pipeline.parameters.staging-region}}'
          PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
          PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
          PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
          INSIGHTS_API_KEY: '{{form.draservicebroker.parameters.iam-api-key}}'
        execute: true
  dra:
    service_id: draservicebroker
    $ref: dra.yml
  webide:
    service_id: orion
form:
  draservicebroker:
    schema:
      $ref: insights.json
  pipeline:
    parameters:
      staging-space: staging
      prod-space: prod
      demodra-app-name: '{{services.demodra-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
  githubpublic:
    parameters:
      demodra-repo_name: '{{toolchain.name}}'
      demodra-repo_url: 'https://github.com/open-toolchain/DemoDRA'
    schema:
      $ref: github.json
